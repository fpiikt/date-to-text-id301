"""
  Автор: Мамченков Николай, группа № S3355


  Реализация находится в функции dateToStr(st)

"""
import time
import re

def dateToStr(st):
    """
    Основная функция

    Содержит массивы со строковыми литералами, используемыми в преобразовании и две функции - checkFormat и toStr,
    выполняюшие осовные действия по преобразованию
    :param st: строка, содержащая дату в формате DD.MM.YYYY HH:MM:SS Диапазоны допустимых значений:
    DD - {1 .. 31}
    MM - {1 .. 12}
    YYYY - {0001 .. 9999}
    HH - {0 .. 23}
    MM - {0 .. 60}
    SS - {0 .. 60}
    :return: возвращает полученную дату в виде строке из прописных символов на русском языке, либо сообщение об ошибке,
    если строка имеет некорректный формат или выходящие за диапазоны допустимых значения
    """


    dateVal = ("",
               "первое",
               "второе",
               "третье",
               "четвертое",
               "пятое",
               "шестое",
               "седьмое",
               "восьмое",
               "девятое",
               "десятое",
               "одиннадцатое",
               "двенадцатое",
               "тринадцатое",
               "четырнадцатое",
               "пятнадцатое",
               "шестнадцатое",
               "семнадцатое",
               "восемнадцатое",
               "девятнадцатое",
               "двадцатое",
               "двадцать первое",
               "двадцать второе",
               "двадцать третье",
               "двадцать четвертое",
               "двадцать пятое",
               "двадцать шестое",
               "двадцать седьмое",
               "двадцать восьмое",
               "двадцать девятое",
               "тридцатое",
               "тридцать первое")

    monthVal = ("",
                "января",
                "февраля",
                "марта",
                "апреля",
                "мая",
                "июня",
                "июля",
                "августа",
                "сентября",
                "октября",
                "ноября",
                "декабря")

    yearThous = ("",
                 "одна ",
                 "две ",
                 "три ",
                 "четыре ",
                 "пять ",
                 "шесть ",
                 "семь ",
                 "восемь ",
                 "девять ")

    yearThousOrd = ("",
                 "одна",
                 "двух",
                 "трех",
                 "четырех",
                 "пяти",
                 "шести",
                 "семи",
                 "восьми",
                 "девяти")

    yearHundr = ("",
                 "сто ",
                 "двести ",
                 "триста ",
                 "четыреста ",
                 "пятьсот ",
                 "шестьсот ",
                 "семьсот ",
                 "восемьсот ",
                 "девятьсот ")

    yearHundrOrd = ("",
                 "",
                 "двух",
                 "трех",
                 "четырех",
                 "пяти",
                 "шести",
                 "семи",
                 "восьми",
                 "девяти")

    yearLessHundr = ("",
                     "первого",
                     "второго",
                     "третьего",
                     "четвертого",
                     "пятого",
                     "шестого",
                     "седьмого",
                     "восьмого",
                     "девятого",
                     "десятого",
                     "одиннадцатого",
                     "двенадцатого",
                     "тринадцатого",
                     "четырнадцатого",
                     "пятнадцатого",
                     "шестнадцатого",
                     "семнадцатого",
                     "восемнадцатого",
                     "девятнадцатого",
                     "двадцатого",
                     "двадцать первого",
                     "двадцать второго",
                     "двадцать третьего",
                     "двадцать четвертого",
                     "двадцать пятого",
                     "двадцать шестого",
                     "двадцать седьмого",
                     "двадцать восьмого",
                     "двадцать девятого",
                     "тридцатого",
                     "тридцать первого",
                     "тридцать второго",
                     "тридцать третьего",
                     "тридцать четвертого",
                     "тридцать пятого",
                     "тридцать шестого",
                     "тридцать седьмого",
                     "тридцать восьмого",
                     "тридцать девятого",
                     "сорокового",
                     "сорок первого",
                     "сорок второго",
                     "сорок третьего",
                     "сорок четвертого",
                     "сорок пятого",
                     "сорок шестого",
                     "сорок седьмого",
                     "сорок восьмого",
                     "сорок девятого",
                     "пятидесятого",
                     "пятьдесят первого",
                     "пятьдесят второго",
                     "пятьдесят третьего",
                     "пятьдесят четвертого",
                     "пятьдесят пятого",
                     "пятьдесят шестого",
                     "пятьдесят седьмого",
                     "пятьдесят восьмого",
                     "пятьдесят девятого",
                     "шестидесятого",
                     "шестьдесят первого",
                     "шестьдесят второго",
                     "шестьдесят третьего",
                     "шестьдесят четвертого",
                     "шестьдесят пятого",
                     "шестьдесят шестого",
                     "шестьдесят седьмого",
                     "шестьдесят восьмого",
                     "шестьдесят девятого",
                     "семидесятого",
                     "семьдесят первого",
                     "семьдесят второго",
                     "семьдесят третьего",
                     "семьдесят четвертого",
                     "семьдесят пятого",
                     "семьдесят шестого",
                     "семьдесят седьмого",
                     "семьдесят восьмого",
                     "семьдесят девятого",
                     "восьмидесятого",
                     "восемьдесят первого",
                     "восемьдесят второго",
                     "восемьдесят третьего",
                     "восемьдесят четвертого",
                     "восемьдесят пятого",
                     "восемьдесят шестого",
                     "восемьдесят седьмого",
                     "восемьдесят восьмого",
                     "восемьдесят девятого",
                     "девяностого",
                     "девяносто первого",
                     "девяносто второго",
                     "девяносто третьего",
                     "девяносто четвертого",
                     "девяносто пятого",
                     "девяносто шестого",
                     "девяносто седьмого",
                     "девяносто восьмого",
                     "девяносто девятого")

    hourVal = ("ноль",
               "один",
               "два",
               "три",
               "четыре",
               "пять",
               "шесть",
               "семь",
               "восемь",
               "девять",
               "десять",
               "одиннадцать",
               "двенадцать",
               "тринадцать",
               "четырнадцать",
               "пятнадцать",
               "шестнадцать",
               "семнадцать",
               "восемнадцать",
               "девятнадцать",
               "двадцать",
               "двадцать один",
               "двадцать два",
               "двадцать три")

    smVal = ("",
            "одна",
            "две",
            "три",
            "четыре",
            "пять",
            "шесть",
            "семь",
            "восемь",
            "девять",
            "десять",
            "одиннадцать",
            "двенадцать",
            "тринадцать",
            "четырнадцать",
            "пятнадцать",
            "шестнадцать",
            "семнадцать",
            "восемнадцать",
            "девятнадцать",
            "двадцать",
            "двадцать одна",
            "двадцать две",
            "двадцать три",
            "двадцать четыре",
            "двадцать пять",
            "двадцать шесть",
            "двадцать семь",
            "двадцать восемь",
            "двадцать девять",
            "тридцать",
            "тридцать одна",
            "тридцать две",
            "тридцать три",
            "тридцать четыре",
            "тридцать пять",
            "тридцать шесть",
            "тридцать семь",
            "тридцать восемь",
            "тридцать девять",
            "сорок",
            "сорок одна",
            "сорок две",
            "сорок три",
            "сорок четыре",
            "сорок пять",
            "сорок шесть",
            "сорок семь",
            "сорок восемь",
            "сорок девять",
            "пятьдесят",
            "пятьдесят одна",
            "пятьдесят две",
            "пятьдесят три",
            "пятьдесят четыре",
            "пятьдесят пять",
            "пятьдесят шесть",
            "пятьдесят семь",
            "пятьдесят восемь",
            "пятьдесят девять",
            "шестьдесят")



    def checkFormat(st):
        """
        Функция для проверки корректности формата входного значения.


        При проверке строка преобразовывается в объект класса struct_time. В дальнейшем этот объект используется в процессе
        преобразования для получения отдельных частей даты. Если формат/значение строки некорректно, выбрасывается исключение
        ValueError и пробрасывается в dateToStr

        :param st: строка, содержащая дату в формате DD.MM.YYYY HH:MM:SS
        :return: объект класса struct_time
        """

        try:
            fTime = time.strptime(st, "%d.%m.%Y %H:%M:%S")
        except ValueError:
            raise
        return fTime


    def toStr(fTime):
        """
        Функция для преобразования объекта класса struct_time в строковую форму.

        Перед преобразованием в строку проверяются составляющие даты, которые могут иметь непостоянную форму.
        Сначала проверяется год - из него извлекается число тысячных, сотых разрядов и значение меньше сотни. После этого
        происходит проверка года на случаи, когда его значение кратно 1000 или 100 - для применения корректных форм слов
        "тысяча", "сто".
        Далее происходит проверка "часовой" части даты с целью определения корректных форм слов "час", "минута", "секунда".
        :param fTime: Объект класса struct_time
        :return: возвращает полученную дату в виде строке из прописных символов на русском языке.
        """
        thousandN = 0
        hundredN = 0
        st = str(fTime.tm_year)
        if int(st) >= 1000:
            thousandN = int(st[0])
            hundredN = int(st[1])
            yearlessN = int(st[2] + st[3])
        elif int(st) >= 100:
            hundredN = int(st[0])
            yearlessN = int(st[1] + st[2])
        elif int(st) >= 10:
            yearlessN = int(st[0] + st[1])
        else:
            yearlessN = int(st[0])

        thousandW = " тысяч "
        hundredW = " "
        yearThousUse = yearThous
        yearHundrUse = yearHundr

        if fTime.tm_year < 1000:
            thousandW = " "
        elif thousandN == 1: 
            thousandW = " тысяча "
        elif thousandN in [2, 3, 4]: 
            thousandW = " тысячи "

        if fTime.tm_year % 1000 == 0:
            thousandW = "тысячного "
            yearThousUse = yearThousOrd
        elif fTime.tm_year % 100 == 0:
            hundredW = "сотого "
            yearHundrUse = yearHundrOrd


        hourW = " часов "
        if fTime.tm_hour in [1, 21]:
            hourW = " час "
        if fTime.tm_hour in [2, 3, 4, 22, 23]:
            hourW = " часа "
        minuteW = " минут "
        if fTime.tm_min in [1, 21, 31, 41, 51]:
            minuteW = " минута "
        elif fTime.tm_min in [2, 3, 4, 22, 23, 24, 32, 33, 34, 42, 43, 44, 52, 53, 54]:
            minuteW = " минуты "
        elif fTime.tm_min == 0:
            minuteW = " "
        secondW = " секунд"
        if fTime.tm_sec in [1, 21, 31, 41, 51]:
            secondW = " секунда"
        elif fTime.tm_sec in [2, 3, 4, 22, 23, 24, 32, 33, 34, 42, 43, 44, 52, 53, 54]:
            secondW = " секунды"
        elif fTime.tm_sec == 0:
            secondW = " "

        fStr = dateVal[fTime.tm_mday] + " " + monthVal[fTime.tm_mon] + " " + yearThousUse[thousandN] + thousandW + \
               yearHundrUse[hundredN] + hundredW + yearLessHundr[yearlessN] + " года " + hourVal[fTime.tm_hour] +\
               hourW + smVal[fTime.tm_min] + minuteW + smVal[fTime.tm_sec] + secondW
        fStr = re.sub(r'\s+', ' ', fStr)
        fStr = fStr.rstrip()
        return fStr

    #блок выполнения
    try:
        fTime = checkFormat(st)
    except ValueError:
        return "Некорректный формат даты"
    return toStr(fTime)
    #конец блока

if __name__ == "__main__":
    assert dateToStr("30.09.2019 15:32:45") == "тридцатое сентября две тысячи девятнадцатого года пятнадцать часов тридцать две минуты сорок пять секунд", "ошибка в проверке 1" # Ok
    assert dateToStr("2.3.1991 03:26:23") == "второе марта одна тысяча девятьсот девяносто первого года три часа двадцать шесть минут двадцать три секунды", "ошибка в проверке 2" # Ok
    assert dateToStr("30.02.1765 12:03:01") == "тридцатое февраля одна тысяча семьсот шестьдесят пятого года двенадцать часов три минуты одна секунда", "ошибка в проверке 3" # Превышение допустимого числа для месяца
    assert dateToStr("13.06.0745 01:01:00") == "тринадцатое июня семьсот сорок пятого года один час одна минута" ,"ошибка в проверке 4" # Ok
    assert dateToStr("05.04.2000 00:59:02") == "пятое апреля двухтысячного года ноль часов пятьдесят девять минут две секунды", "ошибка в проверке 5" # Ok
    assert dateToStr("25.09.185 18:45:34") == "двадцать пятое сентября сто восемьдесят пятого года восемнадцать часов сорок пять минут тридцать четыре секунды", "ошибка в проверке 6" # Некорректный формат года
    assert dateToStr("18.11.1565 20:00:34") == "восемнадцатое ноября одна тысяча пятьсот шестьдесят пятого года двадцать часов тридцать четыре секунды", "ошибка в проверке 7" # Ok
    assert dateToStr("23.09.3198 00:00:00") == "двадцать третье сентября три тысячи сто девяносто восьмого года ноль часов", "ошибка в проверке 8" # Ok
    assert dateToStr("09.05.2001 01:67:23") == "девятое мая две тысячи первого года один час шестьдесят семь минут двадцать три секунды", "ошибка в проверке 9"  # Превышение допустимого значения в минутах
    assert dateToStr("11.12.1800 17:45:15") == "одиннадцатое декабря одна тысяча восьмисотого года семнадцать часов сорок пять минут пятнадцать секунд", "ошибка в проверке 10"  # Ok

